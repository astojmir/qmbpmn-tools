#! /usr/bin/env python
#
# ===========================================================================
#
#                            PUBLIC DOMAIN NOTICE
#               National Center for Biotechnology Information
#
#  This software/database is a "United States Government Work" under the
#  terms of the United States Copyright Act.  It was written as part of
#  the author's official duties as a United States Government employee and
#  thus cannot be copyrighted.  This software/database is freely available
#  to the public for use. The National Library of Medicine and the U.S.
#  Government have not placed any restriction on its use or reproduction.
#
#  Although all reasonable efforts have been taken to ensure the accuracy
#  and reliability of the software and data, the NLM and the U.S.
#  Government do not and cannot warrant the performance or results that
#  may be obtained by using this software or data. The NLM and the U.S.
#  Government disclaim all warranties, express or implied, including
#  warranties of performance, merchantability or fitness for any particular
#  purpose.
#
#  Please cite the author in any work or product based on this material.
#
# ===========================================================================
#
# Code author:  Aleksandar Stojmirovic
#

"""
Starts a web server listening to a specified port, serving the
QMBP-MN files installed according to the settings_module. The
server runs until killed.

To run QMBP-MN applications locally, start this server (say on
a port 9999) and then point your browser to

http://localhost/itm_probe for ITMProbe or
http://localhost/enrich for Saddlesum.

SYNOPSIS:

    qmbpmn_server [OPTION] site_root
    qmbpmn_server -h|--help

OPTIONS:
    -p                  port to listen (default 9191)
    -h, --help          print this message
"""

import os.path
import sys
import getopt
import urlparse
from BaseHTTPServer import HTTPServer
from CGIHTTPServer import CGIHTTPRequestHandler

class Handler(CGIHTTPRequestHandler):

    def is_cgi(self):

        url_path = urlparse.urlsplit(self.path)[2]
        head, tail = os.path.splitext(url_path)
        self.cgi_info = os.path.split(self.path)
        return tail.lower() == ".cgi"

def main(site_root, port):

    os.chdir(site_root)

    try:
        httpd = HTTPServer(("", port), Handler)
        print 'started httpserver at port ', port
        httpd.serve_forever()

    except KeyboardInterrupt:
        print '^C received, shutting down server'
        httpd.socket.close()


if __name__ == '__main__':

    port = 9191
    options = 'hp:'
    long_options = ['help',]

    try:
        opts, args = getopt.getopt(sys.argv[1:], options,
                                   long_options)
        for o, a in opts:
            if o in ("-h", "--help"):
                print __doc__
                sys.exit()
            if o in ("-p",):
                port = int(a)

        if len(args) < 1:
            print __doc__
            sys.exit()

        main(args[0], port)

    except getopt.GetoptError:
        # print help information and exit:
        print __doc__
        sys.exit(2)



